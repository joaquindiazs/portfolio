/* For mobile resolution & default: */

.home-image {
    background-color: #101010;
    height: 100vh;
    min-height: 560px;
    box-sizing: border-box;
    position: relative;
    background-size: auto 100% !important;
    background-repeat: no-repeat;
    background-position: 0 0 !important;
}

.home-title-wrapper {
    position: absolute;
    width: 100%;
    text-align: center;
    bottom: 30px;
}

.home-logo {
    display: none;
}

.box-cell-1 {
    position: absolute;
    border: solid 2px #5AF042;
    border-top: none;
    width: 370px;
    height: 50px;
    top: 0;
    right: 40px;
}

.box-cell-2 {
    position: absolute;
    border: solid 2px #5AF042;
    width: 270px;
    height: 40px;
    top: 72px;
    right: 40px;
}

@mixin glitchCopy { 
        content: attr(data-text);
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
}

.glitch {
    font-family: 'Oswald', sans-serif;
    font-weight: 400;
    margin: 0;
    text-transform: uppercase;
    line-height: 1.5;
	font-size: 35px;
    color: #fff;
    position: relative;
    letter-spacing: 3px;
    /* Animation provies a slight random skew. Check bottom of doc
    for more information on how to random skew. */
    animation: glitch-skew 1s infinite linear alternate-reverse;
    
    // Creates a copy before our text. 
    &::before{
        // Duplicates our text with the mixin.
        @include glitchCopy;
        // Scoots text slightly to the left for the color offset.
        left: 2px;
        // Creates the color 'shadow' that happens on the glitch.
        text-shadow: -2px 0 #ff00c1;
        /* Creates an initial clip for our glitch. This works in
        a typical top,right,bottom,left fashion and creates a mask
        to only show a certain part of the glitch at a time. */
        clip: rect(44px, 450px, 56px, 0);
        /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
        with an alternating animation to keep things fresh. */
        animation: glitch-anim 5s infinite linear alternate-reverse;
    }
    
    // Creates a copy after our text. Note comments from ::before.
    &::after {
        @include glitchCopy;
        left: -2px;
        text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
        animation: glitch-anim2 1s infinite linear alternate-reverse;
    }
}

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
            transform: skew((random(100) / 100) + deg);
    }
  }
}

// Same deal, just duplicated for ultra randomness.
@keyframes glitch-anim2 {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
            transform: skew((random(100) / 100) + deg);
    }
  }
}

// Does the same deal as before, but now only skews. Used for main text.
@keyframes glitch-skew {
  $steps: 10;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      transform: skew((random(10) - 5) + deg);
    }
  }
}

/* For desktop: */

@media only screen and (min-width: 768px) {
    .home-title-wrapper {
        width: auto !important;
        left: 50px;
    }

    .home-logo {
        opacity: .7;
        padding: 6px;
        background-color: #000;
        position: absolute;
        top: 20px;
        right: 30px;
        width: 40px;
        height: auto;
    }
}
